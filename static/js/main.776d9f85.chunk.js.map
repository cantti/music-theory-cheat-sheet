{"version":3,"sources":["components/KeysInfo/KeysInfo.module.scss","components/KeysInfo/AboutText.mdx","theory-utils/note/Note.ts","theory-utils/utils/getLetterIndices.ts","theory-utils/utils/getSymbolShifts.ts","theory-utils/interval/Interval.ts","theory-utils/utils/getNotesByIntervals.ts","theory-utils/scales/Scale.ts","theory-utils/scales/MajorScale.ts","theory-utils/scales/NaturalMinorScale.ts","theory-utils/chords/Chord.ts","theory-utils/chords/DiminishedChord.ts","theory-utils/chords/MajorChord.ts","theory-utils/chords/MinorChord.ts","theory-utils/utils/getChordsByScale.ts","utils/url.tsx","components/Piano.tsx","components/KeysInfo/KeysInfo.tsx","theory-utils/utils/isLetter.ts","theory-utils/utils/isSymbol.ts","data/album-covers/steppers-story.jpg","data/album-covers/dub-selection.jpg","data/album-covers/young-warriors.jpg","data/album-covers/space-travel.jpg","data/album-covers/final-lap.jpg","data/album-covers/korobochka.jpg","data/discography.ts","components/AboutMe.tsx","theory-utils/utils/getScalesByNotes.ts","components/DetectScaleByNotes.tsx","components/App.tsx","index.tsx","components/Piano.module.css"],"names":["module","exports","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","Note","letter","symbol","octave","this","index","find","x","shift","result","parse","note","toUpperCase","Error","length","Interval","name","quality","majorScaleSemitones","interval","semitones","getNotesByIntervals","root","intervals","sortedIntervals","forEach","newNoteLetter","findIndex","indexOf","newNoteOctave","Math","trunc","symbolShift","errorMessage","majorScaleInterval","filter","totalSemitonesByInterval","newNoteSymbol","push","Scale","tonic","getIntervals","kind","format","getShortName","getName","scale","MajorScale","NaturalMinorScale","Chord","chord","DiminishedChord","MajorChord","MinorChord","getChordsByScale","notes","getNotes","getKeysUrl","key","Piano","highlightedNotes","startOctave","undefined","endOctave","className","octaves","sortedHighlightedNotes","sort","a","b","reverse","i","isHighlightNecessary","map","getIndex","includes","styles","piano","whiteKey","blackKey","keyHighlighter","allKeys","fromString","majorKeys","minorKeys","getTopKeyForButton","equals","getBottomKeyForButton","minorRomanNumerals","majorRomanNumerals","allKeysForSelect","_","orderBy","li","KeysInfo","useState","showHelp","setShowHelp","history","useHistory","activeKeyFromUrl","params","str","tonicLetter","tonicSymbol","substring","isSymbol","tonicNote","getActiveKeyFromUrlParams","useParams","activeKey","to","formatKeys","keys","idx","Button","size","variant","onClick","active","notesInKey","Row","Col","xs","md","Form","Control","as","custom","value","toString","onChange","e","parseInt","target","circleOfFifths","circle","majorCircle","minorCircle","Table","bordered","responsive","Array","from","chords","colIdx","rowIdx","Modal","show","onHide","Header","closeButton","Title","Body","discography","artist","title","description","date","Date","image","SteppersStoryImg","link","hyperFollow","YoungWarriors","SpaceTravel","DubSelection","Korobochka","FinalLap","AboutMe","album","lg","Card","Img","src","getFullYear","Link","href","allScales","optionsForInput","display","DetectScaleByNotes","React","fill","inputIndex","inputsValues","setInputsValues","possibleScales","notesIndexes","uniq","intersection","getScalesByNotes","_inputValue","newInputValue","handleInputsValueChange","option","App","fallback","Navbar","bg","expand","Container","Brand","Toggle","Collapse","id","Nav","NavLink","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.776d9f85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circleOfFifths\":\"KeysInfo_circleOfFifths__188w-\",\"circle\":\"KeysInfo_circle__2a_Ty\",\"majorCircle\":\"KeysInfo_majorCircle__3TjZG\",\"minorCircle\":\"KeysInfo_minorCircle__2I965\",\"key\":\"KeysInfo_key__35abf\"};","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`На этой странице вы можете получить подробную информацию о любой тональности.`}</p>\n    <p>{`Для удобства все тональности указаны на интерактивном кварто-квинтовом круге.`}</p>\n    <p><strong parentName=\"p\">{`Кварто-квинтовый круг`}</strong>{` — это способ изображения мажорных и минорных тональностей.\nНа внешней стороне круга — `}<strong parentName=\"p\">{`мажорные`}</strong>{` тональности, на внутренней — параллельные `}<strong parentName=\"p\">{`минорные`}</strong>{`.`}</p>\n    <p>{`Следующая за тоникой по часовой стрелке нота на круге — `}<strong parentName=\"p\">{`доминанта`}</strong>{`. А `}<strong parentName=\"p\">{`субдоминанта`}</strong>{` — следующая нота на круге против часовой стрелки.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import { getLetterIndices } from '../utils/getLetterIndices';\r\nimport { getSymbolShifts } from '../utils/getSymbolShifts';\r\nimport { Letter } from './Letter';\r\nimport { Symbol } from './Symbol';\r\n\r\nexport class Note {\r\n    constructor(\r\n        public letter: Letter = 'C',\r\n        public symbol: Symbol = 'None',\r\n        public octave: number = 0\r\n    ) {}\r\n\r\n    static fromString(parse: string) {\r\n        let note: Note = new Note('C', 'None', 0);\r\n        switch (parse[0].toUpperCase()) {\r\n            case 'C':\r\n                note.letter = 'C';\r\n                break;\r\n            case 'D':\r\n                note.letter = 'D';\r\n                break;\r\n            case 'E':\r\n                note.letter = 'E';\r\n                break;\r\n            case 'F':\r\n                note.letter = 'F';\r\n                break;\r\n            case 'G':\r\n                note.letter = 'G';\r\n                break;\r\n            case 'A':\r\n                note.letter = 'A';\r\n                break;\r\n            case 'B':\r\n                note.letter = 'B';\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n        if (parse.length > 1) {\r\n            switch (parse[1]) {\r\n                case '#':\r\n                    note.symbol = 'Sharp';\r\n                    break;\r\n                case '##':\r\n                    note.symbol = 'DoubleSharp';\r\n                    break;\r\n                case 'b':\r\n                    note.symbol = 'Flat';\r\n                    break;\r\n                case 'bb':\r\n                    note.symbol = 'DoubleFlat';\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return note;\r\n    }\r\n\r\n    getIndex() {\r\n        return (\r\n            this.octave * 12 +\r\n            getLetterIndices().find((x) => x.letter === this.letter)!.index +\r\n            getSymbolShifts().find((x) => x.symbol === this.symbol)!.shift\r\n        );\r\n    }\r\n\r\n    format() {\r\n        let result: string = this.letter;\r\n        switch (this.symbol) {\r\n            case 'Sharp':\r\n                result += '#';\r\n                break;\r\n            case 'DoubleSharp':\r\n                result += '##';\r\n                break;\r\n            case 'Flat':\r\n                result += 'b';\r\n                break;\r\n            case 'DoubleFlat':\r\n                result += 'bb';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import { Letter } from '../note/Letter';\r\n\r\nexport const getLetterIndices = (): { letter: Letter; index: number }[] => [\r\n    { letter: 'C', index: 0 },\r\n    { letter: 'D', index: 2 },\r\n    { letter: 'E', index: 4 },\r\n    { letter: 'F', index: 5 },\r\n    { letter: 'G', index: 7 },\r\n    { letter: 'A', index: 9 },\r\n    { letter: 'B', index: 11 },\r\n];\r\n","import { Symbol } from '../note/Symbol';\r\n\r\nexport const getSymbolShifts = (): { symbol: Symbol; shift: number }[] => [\r\n    { symbol: 'None', shift: 0 },\r\n    { symbol: 'Sharp', shift: 1 },\r\n    { symbol: 'DoubleSharp', shift: 2 },\r\n    { symbol: 'Flat', shift: -1 },\r\n    { symbol: 'DoubleFlat', shift: -2 },\r\n];\r\n","import { IntervalNumber } from './IntervalNumber';\r\nimport { IntervalQuality } from './IntervalQuality';\r\n\r\nexport class Interval {\r\n    constructor(public name: IntervalNumber, public quality: IntervalQuality) {}\r\n}","import { Interval } from '../interval/Interval';\r\nimport { IntervalNumber } from \"../interval/IntervalNumber\";\r\nimport { Letter } from '../note/Letter';\r\nimport { Note } from '../note/Note';\r\nimport { Symbol } from '../note/Symbol';\r\nimport { getSymbolShifts } from './getSymbolShifts';\r\nimport { getLetterIndices } from './getLetterIndices';\r\n\r\nconst majorScaleSemitones: {\r\n    interval: Interval;\r\n    semitones: number;\r\n}[] = [\r\n    {\r\n        interval: new Interval('Unison', 'Perfect'),\r\n        semitones: 0,\r\n    },\r\n    {\r\n        interval: new Interval('Second', 'Major'),\r\n        semitones: 2,\r\n    },\r\n    {\r\n        interval: new Interval('Third', 'Major'),\r\n        semitones: 4,\r\n    },\r\n    {\r\n        interval: new Interval('Fourth', 'Perfect'),\r\n        semitones: 5,\r\n    },\r\n    {\r\n        interval: new Interval('Fifth', 'Perfect'),\r\n        semitones: 7,\r\n    },\r\n    {\r\n        interval: new Interval('Sixth', 'Major'),\r\n        semitones: 9,\r\n    },\r\n    {\r\n        interval: new Interval('Seventh', 'Major'),\r\n        semitones: 11,\r\n    },\r\n    {\r\n        interval: new Interval('Octave', 'Perfect'),\r\n        semitones: 12,\r\n    },\r\n];\r\n\r\nfunction totalSemitonesByInterval(interval: Interval): number {\r\n    const errorMessage: string = 'Invalid interval';\r\n    const majorScaleInterval = majorScaleSemitones.filter(\r\n        (x) => x.interval.name === interval.name\r\n    )[0];\r\n    if (interval.quality === 'Major' || interval.quality === 'Perfect') {\r\n        return majorScaleInterval.semitones;\r\n    }\r\n    if (majorScaleInterval.interval.quality === 'Perfect') {\r\n        switch (interval.quality) {\r\n            case 'Diminished':\r\n                return majorScaleInterval.semitones - 1;\r\n            case 'Augmented':\r\n                return majorScaleInterval.semitones + 1;\r\n            default:\r\n                throw new Error(errorMessage);\r\n        }\r\n    }\r\n    //Major\r\n    else {\r\n        switch (interval.quality) {\r\n            case 'Minor':\r\n                return majorScaleInterval.semitones - 1;\r\n            case 'Diminished':\r\n                return majorScaleInterval.semitones - 2;\r\n            case 'Augmented':\r\n                return majorScaleInterval.semitones + 1;\r\n            default:\r\n                throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getNotesByIntervals(\r\n    root: Note,\r\n    intervals: Array<Interval>\r\n): Note[] {\r\n    const sortedIntervals: IntervalNumber[] = [\r\n        'Unison',\r\n        'Second',\r\n        'Third',\r\n        'Fourth',\r\n        'Fifth',\r\n        'Sixth',\r\n        'Seventh',\r\n        'Octave',\r\n    ];\r\n\r\n    let result: Note[] = [];\r\n\r\n    intervals.forEach((interval) => {\r\n        const newNoteLetter: Letter =\r\n            getLetterIndices()[\r\n                (getLetterIndices().findIndex((x) => x.letter === root.letter) +\r\n                    sortedIntervals.indexOf(interval.name)) %\r\n                    getLetterIndices().length\r\n            ].letter;\r\n\r\n        const newNoteOctave: number = Math.trunc(\r\n            root.octave +\r\n                (getLetterIndices().findIndex((x) => x.letter === root.letter) +\r\n                    sortedIntervals.indexOf(interval.name)) /\r\n                    getLetterIndices().length\r\n        );\r\n\r\n        const rootIndex =\r\n            root.octave * 12 +\r\n            getLetterIndices().find((x) => x.letter === root.letter)!.index +\r\n            getSymbolShifts().find((x) => x.symbol === root.symbol)!.shift;\r\n\r\n        const symbolShift: number =\r\n            rootIndex +\r\n            totalSemitonesByInterval(interval) -\r\n            (newNoteOctave * 12 +\r\n                getLetterIndices().find((x) => x.letter === newNoteLetter)!.index);\r\n\r\n        const newNoteSymbol: Symbol = getSymbolShifts().find(\r\n            (x) => x.shift === symbolShift\r\n        )!.symbol;\r\n\r\n        result.push(new Note(newNoteLetter, newNoteSymbol, newNoteOctave));\r\n    });\r\n\r\n    return result;\r\n}\r\n","import { Interval } from '../interval/Interval';\r\nimport { Note } from '../note/Note';\r\nimport { getNotesByIntervals } from '../utils/getNotesByIntervals';\r\n\r\nexport abstract class Scale {\r\n    constructor(public tonic: Note = new Note()) {}\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getShortName(): string;\r\n\r\n    abstract getIntervals(): Interval[];\r\n\r\n    getNotes() {\r\n        return getNotesByIntervals(this.tonic, this.getIntervals());\r\n    }\r\n\r\n    format(kind: 'short' | 'long' = 'short') {\r\n        if (kind === 'short') {\r\n            return this.tonic.format() + this.getShortName();\r\n        } else {\r\n            return this.tonic.format() + ' ' + this.getName();\r\n        }\r\n    }\r\n\r\n    equals(scale: Scale) {\r\n        return (\r\n            scale.getName() === this.getName() &&\r\n            scale.tonic.letter === this.tonic.letter &&\r\n            scale.tonic.symbol === this.tonic.symbol\r\n        );\r\n    }\r\n}\r\n","import { Interval } from '../interval/Interval';\r\nimport { Scale } from './Scale';\r\n\r\nclass MajorScale extends Scale {\r\n    getName() {\r\n        return 'Major';\r\n    }\r\n    getShortName() {\r\n        return '';\r\n    }\r\n    getIntervals() {\r\n        return [\r\n            new Interval('Unison', 'Perfect'),\r\n            new Interval('Second', 'Major'),\r\n            new Interval('Third', 'Major'),\r\n            new Interval('Fourth', 'Perfect'),\r\n            new Interval('Fifth', 'Perfect'),\r\n            new Interval('Sixth', 'Major'),\r\n            new Interval('Seventh', 'Major'),\r\n            new Interval('Octave', 'Perfect'),\r\n        ];\r\n    }\r\n}\r\n\r\nexport { MajorScale };\r\n","import { Interval } from '../interval/Interval';\r\nimport { Scale } from './Scale';\r\n\r\nclass NaturalMinorScale extends Scale {\r\n    getName() {\r\n        return 'Natural Minor';\r\n    }\r\n    getShortName() {\r\n        return 'm';\r\n    }\r\n    getIntervals() {\r\n        return [\r\n            new Interval('Unison', 'Perfect'),\r\n            new Interval('Second', 'Major'),\r\n            new Interval('Third', 'Minor'),\r\n            new Interval('Fourth', 'Perfect'),\r\n            new Interval('Fifth', 'Perfect'),\r\n            new Interval('Sixth', 'Minor'),\r\n            new Interval('Seventh', 'Minor'),\r\n            new Interval('Octave', 'Perfect'),\r\n        ];\r\n    }\r\n}\r\n\r\nexport { NaturalMinorScale };\r\n","import { Interval } from '../interval/Interval';\r\nimport { Note } from '../note/Note';\r\nimport { getNotesByIntervals } from '../utils/getNotesByIntervals';\r\n\r\nexport abstract class Chord {\r\n    constructor(public tonic: Note = new Note()) {}\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getShortName(): string;\r\n\r\n    abstract getIntervals(): Interval[];\r\n\r\n    format(kind: 'short' | 'long' = 'short') {\r\n        if (kind === 'short') {\r\n            return this.tonic.format() + this.getShortName();\r\n        } else {\r\n            return this.tonic.format() + ' ' + this.getName();\r\n        }\r\n    }\r\n\r\n    getNotes() {\r\n        return getNotesByIntervals(this.tonic, this.getIntervals());\r\n    }\r\n\r\n    equals(chord: Chord) {\r\n        return (\r\n            chord.getName() === this.getName() &&\r\n            chord.tonic.letter === this.tonic.letter &&\r\n            chord.tonic.symbol === this.tonic.symbol\r\n        );\r\n    }\r\n}\r\n","import { Interval } from '../interval/Interval';\r\nimport { Chord } from './Chord';\r\n\r\nexport class DiminishedChord extends Chord {\r\n    getName() {\r\n        return 'Diminished';\r\n    };\r\n    getShortName() {\r\n        return 'dim';\r\n    };\r\n    getIntervals() {\r\n        return [\r\n            new Interval('Unison', 'Perfect'),\r\n            new Interval('Third', 'Minor'),\r\n            new Interval('Fifth', 'Diminished'),\r\n        ];\r\n    };\r\n}\r\n","import { Interval } from '../interval/Interval';\r\nimport { Chord } from './Chord';\r\n\r\nexport class MajorChord extends Chord {\r\n    getName() {\r\n        return 'Major';\r\n    };\r\n    getShortName() {\r\n        return '';\r\n    };\r\n    getIntervals() {\r\n        return [\r\n            new Interval('Unison', 'Perfect'),\r\n            new Interval('Third', 'Major'),\r\n            new Interval('Fifth', 'Perfect'),\r\n        ];\r\n    };\r\n}\r\n","import { Interval } from '../interval/Interval';\r\nimport { Chord } from './Chord';\r\n\r\nexport class MinorChord extends Chord {\r\n    getName() {\r\n        return 'Minor';\r\n    };\r\n    getShortName() {\r\n        return 'm';\r\n    };\r\n    getIntervals() {\r\n        return [\r\n            new Interval('Unison', 'Perfect'),\r\n            new Interval('Third', 'Minor'),\r\n            new Interval('Fifth', 'Perfect'),\r\n        ];\r\n    };\r\n}\r\n","import { DiminishedChord } from \"../chords/DiminishedChord\";\r\nimport { MajorChord } from \"../chords/MajorChord\";\r\nimport { MinorChord } from \"../chords/MinorChord\";\r\nimport { MajorScale } from \"../scales/MajorScale\";\r\nimport { NaturalMinorScale } from \"../scales/NaturalMinorScale\";\r\nimport { Scale } from \"../scales/Scale\";\r\n\r\nexport const getChordsByScale = (scale: Scale) => {\r\n    const notes = scale.getNotes();\r\n    if (scale instanceof MajorScale) {\r\n        return [\r\n            [new MajorChord(notes[0])],\r\n            [new MinorChord(notes[1])],\r\n            [new MinorChord(notes[2])],\r\n            [new MajorChord(notes[3])],\r\n            [new MajorChord(notes[4])],\r\n            [new MinorChord(notes[5])],\r\n            [new DiminishedChord(notes[6])],\r\n        ];\r\n    } else if (scale instanceof NaturalMinorScale) {\r\n        return [\r\n            [new MinorChord(notes[0])],\r\n            [new DiminishedChord(notes[1])],\r\n            [new MajorChord(notes[2])],\r\n            [new MinorChord(notes[3])],\r\n            [new MinorChord(notes[4])],\r\n            [new MajorChord(notes[5])],\r\n            [new MajorChord(notes[6])],\r\n        ];\r\n    }\r\n};\r\n","import { Scale } from '../theory-utils/scales/Scale';\r\n\r\nexport function getKeysUrl(key: Scale): string {\r\n    return '/keys/' +\r\n        key.tonic.letter +\r\n        (key.tonic.symbol !== 'None'\r\n            ? '-' + key.tonic.symbol\r\n            : '') +\r\n        '/' +\r\n        key.getShortName();\r\n}\r\n","import React from 'react';\r\nimport { Note } from '../theory-utils/note/Note';\r\nimport styles from './Piano.module.css';\r\n\r\ntype PianoProps = {\r\n    highlightedNotes?: Note[];\r\n    startOctave?: number;\r\n    endOctave?: number;\r\n    className?: string;\r\n};\r\n\r\nconst Piano = ({\r\n    highlightedNotes = [],\r\n    startOctave = undefined,\r\n    endOctave = undefined,\r\n    className = '',\r\n}: PianoProps) => {\r\n    let octaves: number[] = [];\r\n\r\n    if (startOctave === undefined || endOctave === undefined) {\r\n        if (highlightedNotes.length > 0) {\r\n            const sortedHighlightedNotes = highlightedNotes.sort(\r\n                (a, b) => a.octave - b.octave\r\n            );\r\n            startOctave = sortedHighlightedNotes[0].octave;\r\n            endOctave = sortedHighlightedNotes.reverse()[0].octave;\r\n        } else {\r\n            startOctave = 0;\r\n            endOctave = 0;\r\n        }\r\n    }\r\n\r\n    for (let i = startOctave; i <= endOctave; i++) {\r\n        octaves.push(i);\r\n    }\r\n\r\n    const isHighlightNecessary = (note: Note) =>\r\n        highlightedNotes\r\n            .map((x) => x.getIndex())\r\n            .includes(note.getIndex());\r\n\r\n    return (\r\n        <div className={styles.piano + ' ' + className}>\r\n            {octaves.map((octave) => (\r\n                <div className={styles.octave} key={octave}>\r\n                    <div className={styles.whiteKey}>\r\n                        <div className={styles.blackKey}>\r\n                            {isHighlightNecessary(\r\n                                new Note('C', 'Sharp', octave)\r\n                            ) && <div className={styles.keyHighlighter} />}\r\n                        </div>\r\n                        {isHighlightNecessary(\r\n                            new Note('C', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                    <div className={styles.whiteKey}>\r\n                        <div className={styles.blackKey}>\r\n                            {isHighlightNecessary(\r\n                                new Note('D', 'Sharp', octave)\r\n                            ) && <div className={styles.keyHighlighter} />}\r\n                        </div>\r\n                        {isHighlightNecessary(\r\n                            new Note('D', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                    <div className={styles.whiteKey}>\r\n                        {isHighlightNecessary(\r\n                            new Note('E', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                    <div className={styles.whiteKey}>\r\n                        <div className={styles.blackKey}>\r\n                            {isHighlightNecessary(\r\n                                new Note('F', 'Sharp', octave)\r\n                            ) && <div className={styles.keyHighlighter} />}\r\n                        </div>\r\n                        {isHighlightNecessary(\r\n                            new Note('F', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                    <div className={styles.whiteKey}>\r\n                        <div className={styles.blackKey}>\r\n                            {isHighlightNecessary(\r\n                                new Note('G', 'Sharp', octave)\r\n                            ) && <div className={styles.keyHighlighter} />}\r\n                        </div>\r\n                        {isHighlightNecessary(\r\n                            new Note('G', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                    <div className={styles.whiteKey}>\r\n                        <div className={styles.blackKey}>\r\n                            {isHighlightNecessary(\r\n                                new Note('A', 'Sharp', octave)\r\n                            ) && <div className={styles.keyHighlighter} />}\r\n                        </div>\r\n                        {isHighlightNecessary(\r\n                            new Note('A', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                    <div className={styles.whiteKey}>\r\n                        {isHighlightNecessary(\r\n                            new Note('B', 'None', octave)\r\n                        ) && <div className={styles.keyHighlighter} />}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Piano;\r\n","/* eslint-disable import/no-webpack-loader-syntax */\r\nimport AboutText from '!babel-loader!@mdx-js/loader!./AboutText.mdx';\r\nimport _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, Form, Modal, Row, Table } from 'react-bootstrap';\r\nimport { BsQuestionCircle } from 'react-icons/bs';\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { Note } from '../../theory-utils/note/Note';\r\nimport { MajorScale } from '../../theory-utils/scales/MajorScale';\r\nimport { NaturalMinorScale } from '../../theory-utils/scales/NaturalMinorScale';\r\nimport { Scale } from '../../theory-utils/scales/Scale';\r\nimport { getChordsByScale } from '../../theory-utils/utils/getChordsByScale';\r\nimport { getLetterIndices } from '../../theory-utils/utils/getLetterIndices';\r\nimport { isLetter } from '../../theory-utils/utils/isLetter';\r\nimport { isSymbol } from '../../theory-utils/utils/isSymbol';\r\nimport { getKeysUrl } from '../../utils/url';\r\nimport Piano from '../Piano';\r\nimport styles from './KeysInfo.module.scss';\r\n\r\nconst allKeys: Scale[] = [\r\n    new MajorScale(Note.fromString('C')),\r\n    new MajorScale(Note.fromString('G')),\r\n    new MajorScale(Note.fromString('D')),\r\n    new MajorScale(Note.fromString('A')),\r\n    new MajorScale(Note.fromString('E')),\r\n    new MajorScale(Note.fromString('B')),\r\n    new MajorScale(Note.fromString('Gb')),\r\n    new MajorScale(Note.fromString('Db')),\r\n    new MajorScale(Note.fromString('Ab')),\r\n    new MajorScale(Note.fromString('Eb')),\r\n    new MajorScale(Note.fromString('Bb')),\r\n    new MajorScale(Note.fromString('F')),\r\n    new NaturalMinorScale(Note.fromString('A')),\r\n    new NaturalMinorScale(Note.fromString('E')),\r\n    new NaturalMinorScale(Note.fromString('B')),\r\n    new NaturalMinorScale(Note.fromString('F#')),\r\n    new NaturalMinorScale(Note.fromString('C#')),\r\n    new NaturalMinorScale(Note.fromString('G#')),\r\n    new NaturalMinorScale(Note.fromString('Eb')),\r\n    new NaturalMinorScale(Note.fromString('Bb')),\r\n    new NaturalMinorScale(Note.fromString('F')),\r\n    new NaturalMinorScale(Note.fromString('C')),\r\n    new NaturalMinorScale(Note.fromString('G')),\r\n    new NaturalMinorScale(Note.fromString('D')),\r\n];\r\n\r\nconst majorKeys = allKeys.filter((x) => x instanceof MajorScale);\r\n\r\nconst minorKeys = allKeys.filter((x) => x instanceof NaturalMinorScale);\r\n\r\nconst getTopKeyForButton = (key: Scale): Scale | undefined => {\r\n    if (key.equals(new MajorScale(Note.fromString('Gb')))) {\r\n        return new MajorScale(Note.fromString('F#'));\r\n    }\r\n    if (key.equals(new MajorScale(Note.fromString('Db')))) {\r\n        return new MajorScale(Note.fromString('C#'));\r\n    }\r\n    if (key.equals(new NaturalMinorScale(Note.fromString('Eb')))) {\r\n        return new NaturalMinorScale(Note.fromString('D#'));\r\n    }\r\n    if (key.equals(new NaturalMinorScale(Note.fromString('Bb')))) {\r\n        return new NaturalMinorScale(Note.fromString('A#'));\r\n    }\r\n};\r\n\r\nconst getBottomKeyForButton = (key: Scale): Scale | undefined => {\r\n    if (key.equals(new MajorScale(Note.fromString('B')))) {\r\n        return new MajorScale(Note.fromString('Cb'));\r\n    }\r\n    if (key.equals(new NaturalMinorScale(Note.fromString('G#')))) {\r\n        return new NaturalMinorScale(Note.fromString('Ab'));\r\n    }\r\n};\r\n\r\nconst minorRomanNumerals = ['i', 'iidim', 'III', 'iv', 'v', 'VI', 'VII'];\r\n\r\nconst majorRomanNumerals = ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii'];\r\n\r\n//allKeys ordered by letter like c, d, e, ... , b and then by symbol (none, flat, sharp) for select\r\nconst allKeysForSelect = _.orderBy(allKeys, [\r\n    (x) => getLetterIndices().find((li) => li.letter === x.tonic.letter)!.index,\r\n    (x) => (x.tonic.symbol === 'None' ? 0 : x.tonic.symbol === 'Flat' ? 1 : 2),\r\n]);\r\n\r\nfunction getActiveKeyFromUrlParams(params: { tonic?: string; scale?: string }) {\r\n    if (!params.tonic) {\r\n        return null;\r\n    }\r\n\r\n    const tonicLetter = params.tonic[0];\r\n\r\n    if (!isLetter(tonicLetter)) {\r\n        return null;\r\n    }\r\n\r\n    const tonicSymbol =\r\n        params.tonic.length > 1 ? params.tonic.substring(2) : 'None';\r\n\r\n    if (!isSymbol(tonicSymbol)) {\r\n        return null;\r\n    }\r\n\r\n    const tonicNote = new Note(tonicLetter, tonicSymbol);\r\n\r\n    const activeKeyFromUrl =\r\n        params.scale === 'm'\r\n            ? new NaturalMinorScale(tonicNote)\r\n            : new MajorScale(tonicNote);\r\n\r\n    return activeKeyFromUrl;\r\n}\r\n\r\nexport const KeysInfo = () => {\r\n    const [showHelp, setShowHelp] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    //get key from url\r\n    const activeKeyFromUrl = getActiveKeyFromUrlParams(\r\n        useParams<{ tonic?: string; scale?: string }>()\r\n    );\r\n\r\n    //find key in keys list\r\n    const activeKey = activeKeyFromUrl\r\n        ? allKeysForSelect.find((x) => x.equals(activeKeyFromUrl))\r\n        : null;\r\n\r\n    //redirect to c major if key is not supported\r\n    if (!activeKey) {\r\n        return <Redirect to={getKeysUrl(allKeys[0])} />;\r\n    }\r\n\r\n    const formatKeys = (keys: Scale[]) => {\r\n        return keys.map((key, idx) => (\r\n            <Button\r\n                className={styles.key + ' rounded-circle'}\r\n                key={idx}\r\n                size=\"sm\"\r\n                variant=\"info\"\r\n                // onClick={() => setActiveKey(key)}\r\n                onClick={() => history.push(getKeysUrl(key))}\r\n                active={key === activeKey}\r\n            >\r\n                {!!getTopKeyForButton(key) && (\r\n                    <div>{getTopKeyForButton(key)!.format()}</div>\r\n                )}\r\n                <div>{key.format()}</div>\r\n                {!!getBottomKeyForButton(key) && (\r\n                    <div>{getBottomKeyForButton(key)!.format()}</div>\r\n                )}\r\n            </Button>\r\n        ));\r\n    };\r\n\r\n    const notesInKey = activeKey.getNotes();\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"d-flex flex-wrap align-items-center display-4\">\r\n                <div className=\"mr-2\">Тональности</div>\r\n                <Button\r\n                    variant=\"link\"\r\n                    className=\"p-0\"\r\n                    onClick={() => setShowHelp(true)}\r\n                >\r\n                    <BsQuestionCircle size=\"1.5rem\" />\r\n                </Button>\r\n            </h1>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <h3>Кварто-квинтовый круг</h3>\r\n                    <div className=\"mb-2\">\r\n                        <p>\r\n                            Вы можете выбрать тональность из списка ниже или\r\n                            нажав на соответствующую кнопку в круге.\r\n                        </p>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            custom\r\n                            value={allKeysForSelect\r\n                                .indexOf(activeKey)\r\n                                .toString()}\r\n                            onChange={(e) => {\r\n                                history.push(\r\n                                    getKeysUrl(\r\n                                        allKeysForSelect[\r\n                                            parseInt(e.target.value)\r\n                                        ]\r\n                                    )\r\n                                );\r\n                            }}\r\n                        >\r\n                            {allKeysForSelect.map((key, idx) => (\r\n                                <option key={idx} value={idx}>\r\n                                    {key.format('long')}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </div>\r\n                    <div className={styles.circleOfFifths}>\r\n                        <div\r\n                            className={styles.circle + ' ' + styles.majorCircle}\r\n                        >\r\n                            {formatKeys(majorKeys)}\r\n                            <div\r\n                                className={\r\n                                    styles.circle + ' ' + styles.minorCircle\r\n                                }\r\n                            >\r\n                                {formatKeys(minorKeys)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <h3>Ноты на клавиатуре</h3>\r\n                    <p>Ноты выбранной тональности на клавиатуре.</p>\r\n                    <Piano\r\n                        highlightedNotes={notesInKey}\r\n                        startOctave={activeKey == null ? 0 : undefined}\r\n                        endOctave={activeKey == null ? 1 : undefined}\r\n                        className=\"mb-4\"\r\n                    />\r\n\r\n                    <h3>Ноты</h3>\r\n                    <p>Ноты выбранной тональности, начиная с тоники.</p>\r\n                    <Table bordered responsive>\r\n                        <thead>\r\n                            <tr className=\"bg-light text-center\">\r\n                                {Array.from({ length: 8 }).map((_, idx) => (\r\n                                    <th key={idx}>{idx + 1}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr className=\"text-center\">\r\n                                {notesInKey.map((note, idx) => (\r\n                                    <td key={idx}>{note.format()}</td>\r\n                                ))}\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <h3>Аккорды</h3>\r\n                    <p>Основные аккорды выбранной тональности.</p>\r\n                    <Table bordered responsive>\r\n                        <thead>\r\n                            <tr className=\"bg-light text-center\">\r\n                                {(activeKey instanceof MajorScale\r\n                                    ? majorRomanNumerals\r\n                                    : minorRomanNumerals\r\n                                ).map((x, idx) => (\r\n                                    <th key={idx}>{x}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr className=\"text-center\">\r\n                                {getChordsByScale(activeKey)!.map(\r\n                                    (chords, colIdx) => (\r\n                                        <td key={colIdx}>\r\n                                            {chords.map((chord, rowIdx) => (\r\n                                                <div\r\n                                                    className=\"mb-2\"\r\n                                                    key={rowIdx}\r\n                                                >\r\n                                                    {notesInKey[\r\n                                                        colIdx\r\n                                                    ].format()}\r\n                                                    {chord.getShortName()}\r\n                                                </div>\r\n                                            ))}\r\n                                        </td>\r\n                                    )\r\n                                )}\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={showHelp} onHide={() => setShowHelp(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Справка о тональностях</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AboutText />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import { Letter } from '../note/Letter';\r\n\r\nexport function isLetter(str: string): str is Letter {\r\n    return (\r\n        str === 'C' ||\r\n        str === 'D' ||\r\n        str === 'E' ||\r\n        str === 'F' ||\r\n        str === 'G' ||\r\n        str === 'A' ||\r\n        str === 'B'\r\n    );\r\n}\r\n","import { Symbol } from '../note/Symbol';\r\n\r\nexport function isSymbol(str: string): str is Symbol {\r\n    return (\r\n        str === 'None' ||\r\n        str === 'Sharp' ||\r\n        str === 'DoubleSharp' ||\r\n        str === 'Flat' ||\r\n        str === 'DoubleFlat'\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/steppers-story.2159cf3d.jpg\";","export default __webpack_public_path__ + \"static/media/dub-selection.f52b95d6.jpg\";","export default __webpack_public_path__ + \"static/media/young-warriors.f1739983.jpg\";","export default __webpack_public_path__ + \"static/media/space-travel.bcbcab14.jpg\";","export default __webpack_public_path__ + \"static/media/final-lap.1ac94bda.jpg\";","export default __webpack_public_path__ + \"static/media/korobochka.e4e78f32.jpg\";","import SteppersStoryImg from './album-covers/steppers-story.jpg';\r\nimport DubSelection from './album-covers/dub-selection.jpg';\r\nimport YoungWarriors from './album-covers/young-warriors.jpg';\r\nimport SpaceTravel from './album-covers/space-travel.jpg';\r\nimport FinalLap from './album-covers/final-lap.jpg';\r\nimport Korobochka from './album-covers/korobochka.jpg'\r\n\r\ninterface Album {\r\n    artist: string;\r\n    title: string;\r\n    date: Date;\r\n    description: string;\r\n    image: string;\r\n    link: string;\r\n    hyperFollow: string | undefined;\r\n}\r\n\r\nconst discography: Album[] = [\r\n    {\r\n        artist: 'Cantti',\r\n        title: 'Steppers Story',\r\n        description: ``,\r\n        date: new Date('2014-10-12'),\r\n        image: SteppersStoryImg,\r\n        link: 'https://cantti.bandcamp.com/album/steppers-story',\r\n        hyperFollow: 'https://distrokid.com/hyperfollow/cantti/dy4s',\r\n    },\r\n    {\r\n        artist: 'Cantti',\r\n        title: 'Young Warriors',\r\n        description: ``,\r\n        date: new Date('2016-03-04'),\r\n        image: YoungWarriors,\r\n        link: 'https://cantti.bandcamp.com/album/young-warriors',\r\n        hyperFollow: undefined,\r\n    },\r\n    {\r\n        artist: 'Cantti',\r\n        title: 'Space Travel',\r\n        description: ``,\r\n        date: new Date('2018-01-14'),\r\n        image: SpaceTravel,\r\n        link: 'https://cantti.bandcamp.com/album/space-travel',\r\n        hyperFollow: 'https://distrokid.com/hyperfollow/cantti/dy5d',\r\n    },\r\n    {\r\n        artist: 'Cantti',\r\n        title: 'Dub Selection 1',\r\n        description: ``,\r\n        date: new Date('2019-12-17'),\r\n        image: DubSelection,\r\n        link: 'https://cantti.bandcamp.com/album/dub-selection-1',\r\n        hyperFollow:\r\n            'https://distrokid.com/hyperfollow/cantti/dub-selection-1-2',\r\n    },\r\n    {\r\n        artist: 'Cantti / Скальд',\r\n        title: 'Коробочка коробка',\r\n        description: ``,\r\n        date: new Date('2020-06-2'),\r\n        image: Korobochka,\r\n        link: 'https://cantti.bandcamp.com/album/korobochka-korobka',\r\n        hyperFollow: 'https://vk.com/wall-20788333_22228',\r\n    },\r\n    {\r\n        artist: 'Imminent State',\r\n        title: 'Final Lap',\r\n        description: ``,\r\n        date: new Date('2018-10-25'),\r\n        image: FinalLap,\r\n        link: 'https://imminentstate.bandcamp.com/album/final-lap',\r\n        hyperFollow: 'https://distrokid.com/hyperfollow/imminentstate/fa6R',\r\n    },\r\n];\r\n\r\nexport { discography };\r\n","import React from 'react';\r\nimport { Col, Row, Card } from 'react-bootstrap';\r\nimport { discography } from '../data/discography';\r\nimport _ from 'lodash';\r\n\r\nexport const AboutMe = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"display-4\">Обо мне</h1>\r\n            <p>\r\n                Музыкант из Санкт-Петербурга. В основном работаю в жанре\r\n                регги-даб под псевдонимом <b>Cantti</b>. Также есть релизы в\r\n                жанре Synthwave под псевдонимом <b>Imminent State</b>. Ниже —\r\n                список моих альбомов со ссылками на Bandcamp, где их можно\r\n                купить. Также все альбомы доступны в стримминговых сервисах.\r\n            </p>\r\n            <Row>\r\n                {_.orderBy(discography, (x) => x.date, ['desc']).map(\r\n                    (album, index) => (\r\n                        <Col xs={12} md={6} lg={3} key={index}>\r\n                            <Card className=\"mb-3\">\r\n                                <Card.Img variant=\"top\" src={album.image} />\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        {album.artist}\r\n                                        <br />\r\n                                        {album.title}{' '}\r\n                                        <span className=\"text-secondary\">\r\n                                            ({album.date.getFullYear()})\r\n                                        </span>\r\n                                    </Card.Title>\r\n                                    <Card.Link\r\n                                        href={album.link}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Купить\r\n                                    </Card.Link>\r\n                                    {!!album.hyperFollow && (\r\n                                        <Card.Link\r\n                                            href={album.hyperFollow}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Прослушать\r\n                                        </Card.Link>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                )}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","import _ from 'lodash';\r\nimport { Note } from '../note/Note';\r\nimport { MajorScale } from '../scales/MajorScale';\r\nimport { NaturalMinorScale } from '../scales/NaturalMinorScale';\r\nimport { Scale } from '../scales/Scale';\r\n\r\nconst allScales: Scale[] = [\r\n    new MajorScale(Note.fromString('C')),\r\n    new MajorScale(Note.fromString('G')),\r\n    new MajorScale(Note.fromString('D')),\r\n    new MajorScale(Note.fromString('A')),\r\n    new MajorScale(Note.fromString('E')),\r\n    new MajorScale(Note.fromString('B')),\r\n    new MajorScale(Note.fromString('Gb')),\r\n    new MajorScale(Note.fromString('Db')),\r\n    new MajorScale(Note.fromString('Ab')),\r\n    new MajorScale(Note.fromString('Eb')),\r\n    new MajorScale(Note.fromString('Bb')),\r\n    new MajorScale(Note.fromString('F')),\r\n    new NaturalMinorScale(Note.fromString('A')),\r\n    new NaturalMinorScale(Note.fromString('E')),\r\n    new NaturalMinorScale(Note.fromString('B')),\r\n    new NaturalMinorScale(Note.fromString('F#')),\r\n    new NaturalMinorScale(Note.fromString('C#')),\r\n    new NaturalMinorScale(Note.fromString('G#')),\r\n    new NaturalMinorScale(Note.fromString('Eb')),\r\n    new NaturalMinorScale(Note.fromString('Bb')),\r\n    new NaturalMinorScale(Note.fromString('F')),\r\n    new NaturalMinorScale(Note.fromString('C')),\r\n    new NaturalMinorScale(Note.fromString('G')),\r\n    new NaturalMinorScale(Note.fromString('D')),\r\n];\r\n\r\nexport const getScalesByNotes = (notes: Note[]) => {\r\n    const notesIndexes = _(notes)\r\n        .map((x) => x.getIndex())\r\n        .uniq()\r\n        .value();\r\n\r\n    return allScales.filter(\r\n        (scale) =>\r\n            _.intersection(\r\n                scale.getNotes().map((note) => note.getIndex() % 12),\r\n                notesIndexes\r\n            ).length === notesIndexes.length\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Note } from '../theory-utils/note/Note';\r\nimport { getScalesByNotes } from '../theory-utils/utils/getScalesByNotes';\r\nimport { getKeysUrl } from '../utils/url';\r\nimport { AiOutlineClear } from 'react-icons/all';\r\n\r\nconst optionsForInput: { note?: Note; display: string }[] = [\r\n    { display: 'Не выбрана' },\r\n    { note: Note.fromString('C'), display: 'C' },\r\n    { note: Note.fromString('C#'), display: 'C#/Eb' },\r\n    { note: Note.fromString('D'), display: 'D' },\r\n    { note: Note.fromString('D#'), display: 'D#/Eb' },\r\n    { note: Note.fromString('E'), display: 'E' },\r\n    { note: Note.fromString('F'), display: 'F' },\r\n    { note: Note.fromString('F#'), display: 'F#/Gb' },\r\n    { note: Note.fromString('G'), display: 'G' },\r\n    { note: Note.fromString('G#'), display: 'G#/Ab' },\r\n    { note: Note.fromString('A'), display: 'A' },\r\n    { note: Note.fromString('A#'), display: 'A#/Bb' },\r\n    { note: Note.fromString('B'), display: 'B' },\r\n];\r\n\r\nconst noteInputCount = 7;\r\n\r\nexport const DetectScaleByNotes = () => {\r\n    const [inputsValues, setInputsValues] = React.useState(\r\n        Array(noteInputCount)\r\n            .fill(undefined)\r\n            .map((_, i) => ({\r\n                inputIndex: i,\r\n                value: optionsForInput[0],\r\n            }))\r\n    );\r\n\r\n    const possibleScales = getScalesByNotes(\r\n        inputsValues\r\n            .map((x) => x.value?.note)\r\n            .filter((x): x is Note => x != null)\r\n    );\r\n\r\n    const handleInputsValueChange = (\r\n        inputIndex: number,\r\n        e: React.BaseSyntheticEvent\r\n    ) => {\r\n        setInputsValues(\r\n            inputsValues.map((x) => {\r\n                if (x.inputIndex === inputIndex) {\r\n                    const newInputValue = { ...x };\r\n                    newInputValue.value =\r\n                        optionsForInput[parseInt(e.target.value)];\r\n                    return newInputValue;\r\n                }\r\n                return x;\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Определить тональность</h1>\r\n            <p>Здесь вы можете определить тональность по нотам.</p>\r\n            <p>Выберите ноты.</p>\r\n\r\n            <Row>\r\n                {inputsValues.map((_inputValue, inputIndex) => (\r\n                    <Col xs={12} md={3} key={inputIndex}>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            custom\r\n                            value={optionsForInput.indexOf(\r\n                                inputsValues.find(\r\n                                    (x) => x.inputIndex === inputIndex\r\n                                )!.value\r\n                            )}\r\n                            onChange={(e) =>\r\n                                handleInputsValueChange(inputIndex, e)\r\n                            }\r\n                            className=\"mb-3\"\r\n                        >\r\n                            {optionsForInput.map((option, idx) => (\r\n                                <option key={idx} value={idx}>\r\n                                    {option.display}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <div className=\"mb-3\">\r\n                <Button\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() =>\r\n                        setInputsValues(\r\n                            inputsValues.map((x) => {\r\n                                const newInputValue = { ...x };\r\n                                newInputValue.value = optionsForInput[0];\r\n                                return newInputValue;\r\n                            })\r\n                        )\r\n                    }\r\n                >\r\n                    <AiOutlineClear /> Очистить\r\n                </Button>\r\n            </div>\r\n            {inputsValues.filter((x) => x.value.note == null).length !==\r\n                noteInputCount && (\r\n                <>\r\n                    <p>Тональности с такими нотами:</p>\r\n                    <ul>\r\n                        {possibleScales.map((key, index) => (\r\n                            <li key={index}>\r\n                                <Link to={getKeysUrl(key)}>\r\n                                    {key.format('long')}\r\n                                </Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport { GiMusicalNotes } from 'react-icons/gi';\r\nimport {\r\n    HashRouter as Router,\r\n    Link,\r\n    NavLink,\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\nimport './App.scss';\r\nimport { KeysInfo } from './KeysInfo';\r\nimport { AboutMe } from './AboutMe';\r\nimport { DetectScaleByNotes } from './DetectScaleByNotes';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                    <Container>\r\n                        <Navbar.Brand as={Link} to=\"/\">\r\n                            <GiMusicalNotes className=\"mr-3\" size=\"2rem\" />\r\n                            Шпаргалка по теории музыки\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav>\r\n                                <Nav.Link as={NavLink} to=\"/keys\">\r\n                                    Тональности\r\n                                </Nav.Link>\r\n                                <Nav.Link\r\n                                    as={NavLink}\r\n                                    to=\"/detect-scale-by-notes\"\r\n                                >\r\n                                    Определить тональность\r\n                                </Nav.Link>\r\n                                <Nav.Link as={NavLink} to=\"/discography\">\r\n                                    Обо мне\r\n                                </Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                <Container>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Redirect to=\"/keys\" />\r\n                        </Route>\r\n                        <Route path=\"/detect-scale-by-notes\">\r\n                            <DetectScaleByNotes />\r\n                        </Route>\r\n                        <Route path=\"/discography\">\r\n                            <AboutMe />\r\n                        </Route>\r\n                        <Route path=\"/keys/:tonic?/:scale?\">\r\n                            <KeysInfo />\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </Suspense>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"piano\":\"Piano_piano__3pmSu\",\"octave\":\"Piano_octave__qR95B\",\"whiteKey\":\"Piano_whiteKey__3GFtM\",\"blackKey\":\"Piano_blackKey__1ZWfV\",\"keyHighlighter\":\"Piano_keyHighlighter__yztfI\"};"],"sourceRoot":""}