@use 'sass:math';

$fontSize: 2rem;

.circle {
    border-radius: 50%;
    border: 2px solid gray;
}

.majorCircle {
    width: 90%;

    //to align to center
    margin-left: 5%;

    //to make height same as width
    height: 0;
    padding-bottom: 90%;

    position: relative;

    //compensate key size
    margin-top: 2em;
    margin-bottom: 2em;
}

$minorCircleWidth: 60%;

.minorCircle {
    position: absolute;
    left: (100% - $minorCircleWidth) / 2;
    top: (100% - $minorCircleWidth) / 2;
    width: $minorCircleWidth;

    //to make height same as width
    height: 0;
    padding-bottom: $minorCircleWidth;
}

.key {
    position: absolute;
    background: linear-gradient(#6f9daf, #5e7d8a);
    border-radius: 50%;
    width: $fontSize * 1.6;
    height: $fontSize * 1.6;
    text-align: center;

    //to make key in the middle of circle board
    margin-left: -1.5em;
    margin-top: -1.5em;

    // align elements to center vertically and horizontally
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    cursor: pointer;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    color: #fff;
}

.key.active {
    background: linear-gradient(#6f9daf, #95c4d8);
}

@for $i from 0 through 11 {
    .circle .key:nth-child(#{$i + 1}) {
        $radius: 50%;
        left: $radius + math.sin($i * 30deg) * $radius;
        top: $radius - math.cos($i * 30deg) * $radius;
    }
}

.keyClickEnter {
    transform: scale(1);
}
.keyClickEnterActive {
    transform: scale(0.9);
    transition: transform 40ms;
}
.keyClickExit {
    transform: scale(0.9);
}
.keyClickExitActive {
    transform: scale(1);
    transition: transform 40ms;
}
